I"‚<h2 id="purpose">Purpose</h2>

<p>In order to quickly recap your code, documenting your code is one of the effective methods and also readable. Doxygen supports the de facto standard for creating documentation for C and C++ program, but it also supports other popular programming languages such as Java and Python. It also allows us to generate a fully structured set of HTML or Latex page from the program source code.</p>

<p>For avoiding to forget bit and pieces of using Doxygen, I recorded a few pieces of information and also put a simple <a href="https://github.com/s311354/Doxygen_practice">C program</a> and a simple <a href="https://github.com/s311354/Leetcode_practice">C++ program</a> which contain some Doxygen code snippets. Once processed with Doxygen, it gives <a href="/data/doxygen_c/html_c_program/">C output</a> and <a href="/data/doxygen_c/html_c_plus/">C ++ output</a>.</p>

<h2 id="how-to-document-your-code">How to document your code</h2>

<p>There are four steps that you should follow:</p>

<h4><a name=""></a> Generate doxygen </h4>
<h6><ol>
    <li><a href="#doxygen">Install the doxygen on Mac OSX</a></li>
    <li><a href="#generate">Generate a configuration file</a></li>
    <li><a href="#document">Document your code</a></li>
    <li><a href="#create">Run doxygen to create the documentation</a></li>
</ol></h6>

<h3><a name="doxygen"></a> Install the doxygen on Mac OSX </h3>

<ol>
<li> Open Terminal </li>
<li> Run: </li>
</ol>
<div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$brew install doxygen </span></code></pre></div>

<h3><a name="generate"></a> Generate a configuration file </h3>

<p>By calling doxygen with the -g option in your project to generate a configuration file:</p>

<div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$doxygen -g &lt; config_file &gt; </span></code></pre></div>

<p>The configuration file is a free-form ASCII text file with a structure that is similar to that of a Makefile. The common configuration options are:</p>

<ul style="list-style-type:disc">
<li> PROJECT_NAME: 
      - identify the project for which the documentation is generated.</li>
<li> PROJECT_NUMBER: 
      - enter a project or revision number</li>
<li> INPUT: 
      - specify the files and/or directories that contain documented source files.</li>
<li> OUTPUT_DIRECTORY: 
      - specify the path into which the generated documentation will be written.</li>
<li> EXTRACT_ALL: 
      - if this tag is set to YES, doxygen will assume all entities in documentation are documented.</li>
<li> FILE_PATTERNS: 
      - specify one or more wildcard patterns to filter out the source-files in the directories.</li>
<li> INLINE_SOURCE: 
      - tag to YES will include the body of functions, classs and enums directly into documentation.</li>
</ul>

<p>You can refer to <a href="http://www.doxygen.nl/manual/config.html">configuration</a> link and customize it.</p>

<h3><a name="document"></a> Document your code </h3>

<p>For the C program, the actual documentation consists of comments you write in the .h and .c files that are based on the configuration of doxygen.</p>

<p>There are several ways to mark a comment block as a detailed description:</p>

<ol>
<li> Javadoc style: </li>
It is consist of a C-style comment block starting with two *'s, like this

<div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">/**
 * ... text ...
 */
</span></code></pre></div>
<li> Qt style </li>
It adds an exclamation mark (!) after the opening of a C-style comment block, as shown in

<div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">/*!
 * ... text ...
 */
</span></code></pre></div>
</ol>

<p>You can refer to <a href="http://www.doxygen.nl/manual/docblocks.html">documenting the code</a> and customize it.</p>

<h3><a name="create"></a> Run Doxygen to create the documentation </h3>

<p>To generate the documentation you can now enter:</p>

<div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">doxygen &lt; config-file &gt;
</span></code></pre></div>

<p>Depending on your setting Doxygen will create HTML, latex inside the output directory.</p>

<h2 id="reference">Reference</h2>

<p>[1] <a href="http://www.doxygen.nl">Doxygen</a></p>

<p>[2] <a href="http://www.doxygen.nl/manual/config.html#cfg_file_patterns">Doxygen - Configuration</a></p>

<p>[3] <a href="http://www.doxygen.nl/manual/docblocks.html">Documenting the code</a></p>

<p>[4] <a href="https://flcwiki.desy.de/How%20to%20document%20your%20code%20using%20doxygen">How to document your code using doxygen</a></p>

<h2 id="note">Note</h2>
<p>If you have any constructive criticism or advises, leave the comments below or feel free to email me @qazqazqaz850@gmail.com.
Hope this post will help! :)
</p>

:ET